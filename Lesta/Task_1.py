def IsEven_simple(value):

    ''' Функция нахождения чётности числа из примера задания:

        плюсы: работает быстро (O(1)).

        минусы: ошибки при делении чисел с плавающей точкой.
                например: 10.0000000000000001 % 2 == 0 --> True,
                поскольку предел значимости в вычислениях в Python = 1e-15.
                Бороться с этим можно, например, используя библиотеку decimal.

    '''

    return value % 2 == 0


def IsEven(value):

    ''' Функция нахождения чётности числа с помощью рекурсии:

        плюсы: Принципиально другой метод нахождения чётности.
               Никуда не делась ошибка при работе с плавающей точкой.
               Можно было бы искать чётность из признака делимости на 2,
               но, как мне кажется, этот способ не сильно отличается от примера.
               
        минусы: Низкая скорость работы (экспоненциальная сложность).
                Может случиться переполнение глубины рекурсии.
                
    '''

    if value < 2:
        return value % 2 == 0
    else:
        return IsEven(abs(value) - 2)

    

if __name__ == "__main__":

    test_arr = [-10, 11, 10.001, -10.000]
    
    for num in test_arr:
        print('IsEven({}) = {}'.format(num, IsEven(num)))
